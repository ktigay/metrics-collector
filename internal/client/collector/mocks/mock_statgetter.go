// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ktigay/metrics-collector/internal/client/collector (interfaces: StatGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	metric "github.com/ktigay/metrics-collector/internal/metric"
)

// MockStatGetter is a mock of StatGetter interface.
type MockStatGetter struct {
	ctrl     *gomock.Controller
	recorder *MockStatGetterMockRecorder
}

// MockStatGetterMockRecorder is the mock recorder for MockStatGetter.
type MockStatGetterMockRecorder struct {
	mock *MockStatGetter
}

// NewMockStatGetter creates a new mock instance.
func NewMockStatGetter(ctrl *gomock.Controller) *MockStatGetter {
	mock := &MockStatGetter{ctrl: ctrl}
	mock.recorder = &MockStatGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatGetter) EXPECT() *MockStatGetterMockRecorder {
	return m.recorder
}

// GetStat mocks base method.
func (m *MockStatGetter) GetStat() []metric.Metrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStat")
	ret0, _ := ret[0].([]metric.Metrics)
	return ret0
}

// GetStat indicates an expected call of GetStat.
func (mr *MockStatGetterMockRecorder) GetStat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStat", reflect.TypeOf((*MockStatGetter)(nil).GetStat))
}
