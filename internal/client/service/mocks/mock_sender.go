// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ktigay/metrics-collector/internal/client/service (interfaces: StatSender)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	metric "github.com/ktigay/metrics-collector/internal/metric"
)

// MockStatSender is a mock of StatSender interface.
type MockStatSender struct {
	ctrl     *gomock.Controller
	recorder *MockStatSenderMockRecorder
}

// MockStatSenderMockRecorder is the mock recorder for MockStatSender.
type MockStatSenderMockRecorder struct {
	mock *MockStatSender
}

// NewMockStatSender creates a new mock instance.
func NewMockStatSender(ctrl *gomock.Controller) *MockStatSender {
	mock := &MockStatSender{ctrl: ctrl}
	mock.recorder = &MockStatSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatSender) EXPECT() *MockStatSenderMockRecorder {
	return m.recorder
}

// SendMetrics mocks base method.
func (m *MockStatSender) SendMetrics(arg0 []metric.Metrics, arg1 chan<- error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendMetrics", arg0, arg1)
}

// SendMetrics indicates an expected call of SendMetrics.
func (mr *MockStatSenderMockRecorder) SendMetrics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMetrics", reflect.TypeOf((*MockStatSender)(nil).SendMetrics), arg0, arg1)
}
